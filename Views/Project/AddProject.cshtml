@model ProjectManageEntity.Project

@{
    ViewBag.Title = "Project";
}

@using (Html.BeginForm("Create", "project", FormMethod.Post))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            Project :
            @Html.EditorFor(model => model.Project1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Project1, "", new { @class = "text-danger" })
        </div>
        @Html.Hidden("hdnChk", "false")
        <input name="check" type="checkbox" onchange="Enable_D(check.checked)" />Stat/End Date
        <script type="text/javascript">
            function Enable_D(CheckVal) {
                if (CheckVal == true) {
                    $("#Start_Date").removeAttr('readonly')
                    $("#End_date").removeAttr('readonly')
                    $("#hdnChk").val(true)
                }
                else {

                    $("#End_date").attr("readonly", "readonly")
                    $("#Start_Date").attr("readonly", "readonly");
                    $("#hdnChk").val(false)
                }

            }
        </script>

        <div class="form-group">

            Start Date
            @Html.EditorFor(model => model.Start_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Start_Date, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            End Date
            @Html.EditorFor(model => model.End_date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.End_date, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            <label for="Prange">Priority:</label> 0 <input name="Prange" type="range" min="1" max="30" id="prange" value="@Model.Priority" oninput="showVal(this.value)" onchange="showVal(this.value)">
            30 :
            <script>
                function showVal(newVal) {

                    document.getElementById("valBox").innerHTML = newVal;
                }
            </script>
            <span id="valBox"></span>

        </div>

        <div class="form-group">
            Manager :
            <div class="col-md-10 dropdown">
                @{List<SelectListItem> OuserName = new List<SelectListItem>();
                foreach (var ouser in Model.User_info)
                {
                    if (ouser.Project_ID == Model.Project_ID)
                    {
                        SelectListItem oItem = new SelectListItem();
                        oItem.Text = ouser.FirstName + "  " + ouser.LastName;
                        oItem.Value = ouser.User_ID.ToString();
                        OuserName.Add(oItem);
                        break;
                    }
                }
                foreach (var ouser in Model.User_info)
                {

                    if (ouser.Project_ID != Model.Project_ID)
                    {
                        SelectListItem oItem = new SelectListItem();
                        oItem.Text = ouser.FirstName + "  " + ouser.LastName;
                        oItem.Value = ouser.User_ID.ToString();
                        OuserName.Add(oItem);
                    }
                }
                }
                @Html.DropDownList("User", OuserName as List<SelectListItem>, htmlAttributes: new { @class = "form-control", id = "User" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@ViewBag.SubmitValue" class="btn btn-outline-success" />
                <input type="reset" value="Reset" class="btn btn-outline-warning" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
